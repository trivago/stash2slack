{namespace bitbucketserver.page.slack.settings}

/**
 * @param repository
 * @param slackSettings
 * @param notificationLevels
 **/
{template .viewSlackSettings}
<html>
    <head>
        <meta name="decorator" content="bitbucket.repository.settings">
        <meta name="projectKey" content="{$repository.project.key}">
        <meta name="repositorySlug" content="{$repository.slug}">
        <meta name="activeTab" content="repository-settings-slack-settings">
        <title>{{getText('stash2slack.local.settings.slack.title', $repository.project.name, $repository.name)}}</title>
    </head>
    <body>
        {call widget.aui.pageHeader}
            {param content}
                <h2>{getText('stash2slack.local.settings.heading')}</h2>
            {/param}
        {/call}
        {call widget.aui.form.form}
            {param action: '' /}
            {param content}

                {call widget.aui.form.checkbox}
                    {param id: 'slackNotificationsOverrideEnabled' /}
                    {param labelContent: getText('stash2slack.local.settings.slack.override.label') /}
                    {param checked: $slackSettings.slackNotificationsOverrideEnabled /}
                    {param description: getText('stash2slack.local.settings.slack.override.description') /}
                {/call}

                <h4>Pull request notifications</h4>

                {call widget.aui.form.checkbox}
                    {param id: 'slackNotificationsEnabled' /}
                    {param labelContent: getText('stash2slack.local.settings.slack.enabled.label') /}
                    {param checked: $slackSettings.slackNotificationsEnabled /}
                    {param description: getText('stash2slack.local.settings.slack.enabled.description') /}
                {/call}

                {call aui.form.selectField}
                    {param id: 'slackNotificationPrLevel' /}
                    {param labelContent: getText('stash2slack.local.settings.notification.pr.level.label') /}
                    {param value: $slackSettings.notificationPrLevel /}
                    {param options: $notificationLevels /}
                {/call}


                <div style="padding-left: 20px;">
                    <p>Filter pull request events based on activity types</p>
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsOpenedEnabled' /}
                        {param labelContent: getText('stash2slack.local.settings.slack.opened.enabled.label') /}
                        {param checked: $slackSettings.slackNotificationsOpenedEnabled /}
                        {param description: getText('stash2slack.local.settings.slack.opened.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsReopenedEnabled' /}
                        {param labelContent: getText('stash2slack.local.settings.slack.reopened.enabled.label') /}
                        {param checked: $slackSettings.slackNotificationsReopenedEnabled /}
                        {param description: getText('stash2slack.local.settings.settings.slack.reopened.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsUpdatedEnabled' /}
                        {param labelContent: getText('stash2slack.local.settings.slack.updated.enabled.label') /}
                        {param checked: $slackSettings.slackNotificationsUpdatedEnabled /}
                        {param description: getText('stash2slack.local.settings.slack.updated.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsApprovedEnabled' /}
                        {param labelContent: getText('stash2slack.local.settings.slack.approved.enabled.label') /}
                        {param checked: $slackSettings.slackNotificationsApprovedEnabled /}
                        {param description: getText('stash2slack.local.settings.slack.approved.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsUnapprovedEnabled' /}
                        {param labelContent: getText('stash2slack.local.settings.slack.unapproved.enabled.label') /}
                        {param checked: $slackSettings.slackNotificationsUnapprovedEnabled /}
                        {param description: getText('stash2slack.local.settings.slack.unapproved.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsDeclinedEnabled' /}
                        {param labelContent: getText('stash2slack.local.settings.slack.declined.enabled.label') /}
                        {param checked: $slackSettings.slackNotificationsDeclinedEnabled /}
                        {param description: getText('stash2slack.local.settings.slack.declined.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsMergedEnabled' /}
                        {param labelContent: getText('stash2slack.local.settings.slack.merged.enabled.label') /}
                        {param checked: $slackSettings.slackNotificationsMergedEnabled /}
                        {param description: getText('stash2slack.local.settings.slack.merged.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsCommentedEnabled' /}
                        {param labelContent: getText('stash2slack.local.settings.slack.commented.enabled.label') /}
                        {param checked: $slackSettings.slackNotificationsCommentedEnabled /}
                        {param description: getText('stash2slack.local.settings.slack.commented.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsNeedsWorkEnabled' /}
                        {param labelContent: getText('stash2slack.local.settings.slack.needs.work.enabled.label') /}
                        {param checked: $slackSettings.slackNotificationsNeedsWorkEnabled /}
                        {param description: getText('stash2slack.local.settings.slack.needs.work.enabled.description') /}
                    {/call}
                </div>

                <h4>Push notifications</h4>

                {call widget.aui.form.checkbox}
                    {param id: 'slackNotificationsEnabledForPush' /}
                    {param labelContent: getText('stash2slack.local.settings.slack.push.enabled.label') /}
                    {param checked: $slackSettings.slackNotificationsEnabledForPush /}
                    {param description: getText('stash2slack.local.settings.slack.push.enabled.description') /}
                {/call}
                {call aui.form.selectField}
                    {param id: 'slackNotificationLevel' /}
                    {param labelContent: getText('stash2slack.local.settings.notification.level.label') /}
                    {param value: $slackSettings.notificationLevel /}
                    {param options: $notificationLevels /}
                {/call}

                <h4>Personal notifications</h4>

                {call widget.aui.form.checkbox}
                    {param id: 'slackNotificationsEnabledForPersonal' /}
                    {param labelContent: getText('stash2slack.local.settings.slack.personal.enabled.label') /}
                    {param checked: $slackSettings.slackNotificationsEnabledForPersonal /}
                    {param description: getText('stash2slack.local.settings.slack.personal.enabled.description') /}
                {/call}


                <h4>Channel and hook overrides</h4>
                {call widget.aui.form.text}
                    {param id: 'slackChannelName' /}
                    {param labelContent: getText('stash2slack.local.settings.slack.channel') /}
                    {param initialValue: $slackSettings.slackChannelName /}
                    {param description: getText('stash2slack.local.settings.slack.channel.description') /}
                {/call}
                {call widget.aui.form.text}
                    {param id: 'slackWebHookUrl' /}
                    {param labelContent: getText('stash2slack.local.settings.slack.webhookurl') /}
                    {param initialValue: $slackSettings.slackWebHookUrl /}
                    {param description: getText('stash2slack.local.settings.slack.webhookurl.description') /}
                {/call}

                <h4>Additional configuration</h4>
                {call widget.aui.form.text}
                    {param id: 'slackUsername' /}
                    {param labelContent: getText('stash2slack.local.settings.slack.username') /}
                    {param initialValue: $slackSettings.slackUsername /}
                    {param description: getText('stash2slack.local.settings.slack.username.description') /}
                {/call}
                {call widget.aui.form.text}
                    {param id: 'slackIconUrl' /}
                    {param labelContent: getText('stash2slack.local.settings.slack.iconurl') /}
                    {param initialValue: $slackSettings.slackIconUrl /}
                    {param description: getText('stash2slack.local.settings.slack.iconurl.description') /}
                {/call}
                {call widget.aui.form.text}
                    {param id: 'slackIconEmoji' /}
                    {param labelContent: getText('stash2slack.local.settings.slack.iconemoji') /}
                    {param initialValue: $slackSettings.slackIconEmoji /}
                    {param description: getText('stash2slack.local.settings.slack.iconemoji.description') /}
                {/call}


                {call aui.form.buttons}
                    {param content}
                        {call aui.form.submit}
                            {param id: 'bitbucketserver.web.slack.settings.submit' /}
                            {param text: getText('stash2slack.local.settings.submit') /}
                            {param type: 'submit' /}
                        {/call}
                    {/param}
                {/call}
            {/param}
        {/call}
    </body>
</html>
{/template}
