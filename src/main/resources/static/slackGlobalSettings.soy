{namespace bitbucketserver.page.slack.global.settings}

/**
 * @param slackUsername
 * @param slackIconUrl
 * @param slackIconEmoji
 * @param slackGlobalWebHookUrl
 * @param slackChannelName
 * @param slackNotificationsEnabled
 * @param slackNotificationsOpenedEnabled
 * @param slackNotificationsReopenedEnabled
 * @param slackNotificationsUpdatedEnabled
 * @param slackNotificationsApprovedEnabled
 * @param slackNotificationsUnapprovedEnabled
 * @param slackNotificationsDeclinedEnabled
 * @param slackNotificationsMergedEnabled
 * @param slackNotificationsCommentedEnabled
 * @param slackNotificationsNeedsWorkEnabled
 * @param slackNotificationsEnabledForPush
 * @param slackNotificationsEnabledForPersonal
 * @param notificationLevel
 * @param notificationPrLevel
 * @param notificationLevels
 **/
{template .viewGlobalSlackSettings}
<html>
    <head>
        <title>Global slack settings</title>
        <meta name="decorator" content="atl.admin">
        <meta name="activeTab" content="global-settings-slack-settings">
    </head>
    <body>
        {call widget.aui.pageHeader}
            {param content}
                <h2>{getText('stash2slack.global.settings.heading')}</h2>
            {/param}
        {/call}

        {call widget.aui.form.form}
            {param action: '' /}
            {param content}

                <h4>Pull request notifications</h4>
                {call widget.aui.form.checkbox}
                    {param id: 'slackNotificationsEnabled' /}
                    {param labelContent: getText('stash2slack.global.settings.slack.enabled.label') /}
                    {param checked: $slackNotificationsEnabled /}
                    {param description: getText('stash2slack.global.settings.slack.enabled.description') /}
                {/call}

                {call aui.form.selectField}
                    {param id: 'slackNotificationPrLevel' /}
                    {param labelContent: getText('stash2slack.global.settings.notification.pr.level.label') /}
                    {param value: $notificationPrLevel /}
                    {param options: $notificationLevels /}
                {/call}


                <div style="padding-left: 20px;">
                    <p>Filter pull request events based on activity types</p>
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsOpenedEnabled' /}
                        {param labelContent: getText('stash2slack.global.settings.slack.opened.enabled.label') /}
                        {param checked: $slackNotificationsOpenedEnabled /}
                        {param description: getText('stash2slack.global.settings.slack.opened.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsReopenedEnabled' /}
                        {param labelContent: getText('stash2slack.global.settings.slack.reopened.enabled.label') /}
                        {param checked: $slackNotificationsReopenedEnabled /}
                        {param description: getText('stash2slack.global.settings.slack.reopened.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsUpdatedEnabled' /}
                        {param labelContent: getText('stash2slack.global.settings.slack.updated.enabled.label') /}
                        {param checked: $slackNotificationsUpdatedEnabled /}
                        {param description: getText('stash2slack.global.settings.slack.updated.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsApprovedEnabled' /}
                        {param labelContent: getText('stash2slack.global.settings.slack.approved.enabled.label') /}
                        {param checked: $slackNotificationsApprovedEnabled /}
                        {param description: getText('stash2slack.global.settings.slack.approved.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsUnapprovedEnabled' /}
                        {param labelContent: getText('stash2slack.global.settings.slack.unapproved.enabled.label') /}
                        {param checked: $slackNotificationsUnapprovedEnabled /}
                        {param description: getText('stash2slack.global.settings.slack.unapproved.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsDeclinedEnabled' /}
                        {param labelContent: getText('stash2slack.global.settings.slack.declined.enabled.label') /}
                        {param checked: $slackNotificationsDeclinedEnabled /}
                        {param description: getText('stash2slack.global.settings.slack.declined.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsMergedEnabled' /}
                        {param labelContent: getText('stash2slack.global.settings.slack.merged.enabled.label') /}
                        {param checked: $slackNotificationsMergedEnabled /}
                        {param description: getText('stash2slack.global.settings.slack.merged.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsCommentedEnabled' /}
                        {param labelContent: getText('stash2slack.global.settings.slack.commented.enabled.label') /}
                        {param checked: $slackNotificationsCommentedEnabled /}
                        {param description: getText('stash2slack.global.settings.slack.commented.enabled.description') /}
                    {/call}
                    {call widget.aui.form.checkbox}
                        {param id: 'slackNotificationsNeedsWorkEnabled' /}
                        {param labelContent: getText('stash2slack.global.settings.slack.needs.work.enabled.label') /}
                        {param checked: $slackNotificationsNeedsWorkEnabled /}
                        {param description: getText('stash2slack.global.settings.slack.needs.work.enabled.description') /}
                    {/call}
                </div>

                <h4>Push notifications</h4>

                {call widget.aui.form.checkbox}
                    {param id: 'slackNotificationsEnabledForPush' /}
                    {param labelContent: getText('stash2slack.global.settings.slack.push.enabled.label') /}
                    {param checked: $slackNotificationsEnabledForPush /}
                    {param description: getText('stash2slack.global.settings.slack.push.enabled.description') /}
                {/call}
                {call aui.form.selectField}
                    {param id: 'slackNotificationLevel' /}
                    {param labelContent: getText('stash2slack.global.settings.slack.notification.level.label') /}
                    {param value: $notificationLevel /}
                    {param options: $notificationLevels /}
                {/call}

                <h4>Personal notifications enabled</h4>

                {call widget.aui.form.checkbox}
                    {param id: 'slackNotificationsEnabledForPersonal' /}
                    {param labelContent: getText('stash2slack.global.settings.slack.personal.enabled.label') /}
                    {param checked: $slackNotificationsEnabledForPersonal /}
                    {param description: getText('stash2slack.global.settings.slack.personal.enabled.description') /}
                {/call}



                <h4>Channel and hook name</h4>
                {call widget.aui.form.text}
                    {param id: 'slackChannelName' /}
                    {param labelContent: getText('stash2slack.global.settings.slack.channel') /}
                    {param initialValue: $slackChannelName /}
                    {param description: getText('stash2slack.global.settings.slack.channel.description') /}
                {/call}
                {call widget.aui.form.text}
                    {param id: 'slackGlobalWebHookUrl' /}
                    {param labelContent: getText('stash2slack.global.settings.slack.webhookurl') /}
                    {param initialValue: $slackGlobalWebHookUrl /}
                    {param description: getText('stash2slack.global.settings.slack.webhook.description') /}
                {/call}

                 <h4>Additional configuration</h4>
                 {call widget.aui.form.text}
                     {param id: 'slackUsername' /}
                     {param labelContent: getText('stash2slack.global.settings.slack.username') /}
                     {param initialValue: $slackUsername /}
                     {param description: getText('stash2slack.global.settings.slack.username.description') /}
                 {/call}
                 {call widget.aui.form.text}
                     {param id: 'slackIconUrl' /}
                     {param labelContent: getText('stash2slack.global.settings.slack.iconurl') /}
                     {param initialValue: $slackIconUrl /}
                     {param description: getText('stash2slack.global.settings.slack.iconurl.description') /}
                 {/call}
                 {call widget.aui.form.text}
                     {param id: 'slackIconEmoji' /}
                     {param labelContent: getText('stash2slack.global.settings.slack.iconemoji') /}
                     {param initialValue: $slackIconEmoji /}
                     {param description: getText('stash2slack.global.settings.slack.iconemoji.description') /}
                 {/call}

                {call aui.form.buttons}
                    {param content}
                        {call aui.form.submit}
                            {param id: 'bitbucketserver.web.slack.global.settings.submit' /}
                            {param text: getText('stash2slack.global.settings.slack.submit') /}
                            {param type: 'submit' /}
                        {/call}
                    {/param}
                {/call}
            {/param}
        {/call}
    </body>
</html>
{/template}
